<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="userMapper">


	<resultMap id="userResultSet" type="user">
		<result property="userNo" column="USER_NO_PK" />
		<result property="userId" column="USER_ID" />
		<result property="userPwd" column="USER_PWD" />
		<result property="userName" column="USER_NAME" />
		<result property="nickname" column="NICKNAME" />
		<result property="email" column="EMAIL" />
		<result property="phone" column="PHONE" />
		<result property="status" column="STATUS" />
		<result property="adminYn" column="ADMIN_YN" />
	</resultMap>

	<resultMap id="userJwtResultSet" type="userJwt">
		<result property="userJwtIdx" column="USER_JWT_IDX_PK" />
		<result property="userNo" column="USER_NO_Fk" />
		<result property="refreshToken" column="REFRESH_TOKEN" />
	</resultMap>

	<insert id="insert" parameterType="User">
		INSERT INTO USER_TB VALUES
		(#{userId})
	</insert>

	<insert id="registerUser" parameterType="User">
		INSERT INTO user_table
		(user_no_pk, user_id, user_pwd, user_name, nickname, email,
		phone)
		VALUES (#{userNo}, #{userId}, #{userPwd}, #{userName},
		#{nickname},
		#{email}, #{phone})
	</insert>

	<insert id="adminRegister" parameterType="User">
		INSERT INTO user_table
		(user_no_pk, user_id, user_pwd, user_name, nickname, email,
		phone, status,
		adminYn)
		VALUES (#{userNo}, #{userId}, #{userPwd}, #{userName},
		#{nickname},
		#{email}, #{phone}, #{status}, #{adminYn})
	</insert>

	<select id="selectOne" parameterType="User"
		resultMap="userResultSet">
		SELECT user_id, user_pwd, nickname
		FROM USER_TB
		<where>
			<if test="userNo != null and userNo != 0">user_no_pk = #{userNo}</if>
			<if test="userId != null and userId != ''">user_id = #{userId}</if>
		</where>
	</select>

	<select id="selectLoginUser" parameterType="User"
		resultMap="userResultSet">
		SELECT user_id, user_pwd, nickname
		FROM USER_TB
		<where>
			<if test="userId != null and userId != ''">user_id = #{userId}</if>
		</where>
	</select>

	<select id="selectList" parameterType="User"
		resultMap="userResultSet">
		select *
		from USER_TB;
	</select>

	<select id="selectListbyId" parameterType="User"
		resultMap="userResultSet">
		select *
		from USER_TB
		where user_id = #{userId};
	</select>
	
	<select id="selectListbyNo" parameterType="User"
		resultMap="userResultSet">
		select *
		from USER_TB
		where user_no_pk = #{userNo};
	</select>

	<select id="selectUserJwt" parameterType="userJwt"
		resultMap="userJwtResultSet">
		SELECT *
		FROM USER_JWT_TB
		WHERE USER_JWT_IDX_PK =
		#{userJwtIdx}
	</select>

	<select id="selectUserJwtBySubject" parameterType="userJwt"
		resultMap="userJwtResultSet">
		SELECT UJ.*
		FROM USER_JWT_TB UJ
		JOIN USER_TB U
		WHERE
		U.USER_NO_PK = UJ.USER_NO_FK
		AND U.USER_ID = #{subject}
	</select>

	<insert id="insertJwtWithIdx" parameterType="userJwt">
		INSERT INTO
		USER_JWT_TB (`USER_JWT_IDX_PK`, `USER_NO_Fk`, `REFRESH_TOKEN`)
		SELECT
		#{userJwtIdx}, USER_NO_PK, #{refreshToken}
		FROM USER_TB
		WHERE USER_ID =
		#{subject}
	</insert>

	<update id="updateUserJwtWithIdx" parameterType="userJwt">
		UPDATE
		USER_JWT_TB
		SET REFRESH_TOKEN = #{refreshToken}
		WHERE USER_JWT_IDX_PK =
		#{userJwtIdx}
	</update>

	<delete id="deleteUserJwtWithSubject" parameterType="userJwt">
		DELETE UJ
		FROM USER_JWT_TB UJ
		JOIN USER_TB U
		ON UJ.USER_NO_FK =
		U.USER_NO_PK
		<where>
			<if test="subject != null and subject != ''">U.USER_ID = #{subject}</if>
			<if test="userJwtIdx != null and userJwtIdx != ''">UJ.USER_JWT_IDX_PK = #{userJwtIdx}</if>
		</where>
	</delete>

	<delete id="deleteUserJwtWithUserJwtIdx" parameterType="userJwt">
		DELETE
		FROM USER_JWT_TB
		WHERE USER_JWT_IDX_PK = #{userJwtIdx}
	</delete>

	<update id="updateUser" parameterType="User">
		UPDATE user_tb SET user_id
		= #{userId}, user_pwd = #{userPwd},
		"user_name" = #{userName}, nickname
		= #{nickname}, email = #{mail},phone
		= #{phone}
		WHERE
		user_id = #{userId}
	</update>

	<update id="deleteUser" parameterType="User">
		UPDATE user_tb SET status
		= "y" WHERE user_no = #{userNo}
	</update>
	
	
	<select id="findByUserId" parameterType="User"
		resultMap="userResultSet">
        SELECT * FROM user_tb WHERE user_id = #{userId}
    </select>


	<!-- <insert id="insert" parameterType="user"> INSERT INTO USER VALUES (#{userId}) 
		</insert> <select id="selectOne" resultType="int"> select count(*) from user_tb 
		</select> <insert id="insertNull" parameterType="String"> insert into user_tb 
		values (#{key}, #{key}) </insert> <resultMap id="userMap" type="User"> <result 
		property="userId" column="user_id" /> <result property="userPwd" column="user_pwd" 
		/> <result property="userName" column="user_name" /> <result property="userNickname" 
		column="nickname" /> <result property="userMail" column="email" /> <result 
		property="userPhone" column="phone" /> </resultMap> <select id="getUserById" 
		resultMap="userMap" parameterType="User"> SELECT * FROM user_tb WHERE user_id 
		= #{userId} </select> <select id="getAllUsers" resultMap="userMap"> SELECT 
		* FROM user_tb </select> <insert id="insertUser" parameterType="User"> INSERT 
		INTO user_tb (user_id, user_pwd, user_name, nickname, email,phone) VALUES 
		(#{userId}, #{userPwd}, #{userName}, #{userNickname}, #{userMail},#{userPhone}) 
		</insert> <update id="updateUser" parameterType="User"> UPDATE user_tb SET 
		user_id = #{userId}, user_pwd = #{userPwd}, "user_name" = #{userName}, nickname 
		= #{userNickname}, email = #{userMail},phone = #{userPhone} WHERE userId 
		= #{userId} </update> <delete id="deleteUser" parameterType="User"> DELETE 
		FROM user_tb WHERE user_id = #{userId} </delete> <select id="getUserByCredentials" 
		parameterType="map" resultType="User"> SELECT * FROM users WHERE user_id 
		= #{userId} AND user_pwd = #{userPwd} </select> -->
</mapper>